# frozen_string_literal: true
module LabwareCreators
  # This class is used to transfer samples from a plate well into two tubes, each for a well.
  class TubesFromPlateWell < Base
    include LabwareCreators::WellFilterBehaviour
    include SupportParent::PlateOnly

    attr_reader :tube_transfer, :tubes

    # Creates tubes and transfers material from the parent plate to the child tubes.
    # This method should be invoked in the `create_transfer!` method after the child tubes have been created.
    # It is responsible for handling the transfer process, ensuring that the material
    # from the parent plate wells is correctly transferred to the corresponding child tubes.
    #
    # @note We allow users to create more than two tubes per well, by clicking the "Add Tube" button in the UI.
    #   In case the user mistakenly clicks the "Add Tube" button multiple times, we assume that the user would
    #   cancel the additional tubes through the UI, so we do not handle that case here. If in case we need to
    #   handle that case, we need to track down the relationship between the tubes and the wells with `TransferRequest`
    #   model, where we have the `source_asset` and `target_asset` attributes along with the state. Also, note that
    #   the `request_hash` contains the `outer_request` and for the 2 tubes created, the `outer_request` will be the
    #   same. Because of this, the user might not be able to see requests in the "Requests" tab of the SS UI for the
    #   second tube.
    def create_labware!
      # 1. Create the tubes for each well in the plate.\
      well_filter.filtered.each do |well, additional_info|
        tubes =
          Array.new(2) do
            Sequencescape::Api::V2::TubeFromPlateCreation.create!(
              child_purpose_uuid: purpose_uuid,
              parent_uuid: parent_uuid,
              user_uuid: user_uuid
            ).child
          end
        # 2. For each tube created, create a transfer request to transfer the material from the well to the tubes.
        tubes.each do |tube|
          Sequencescape::Api::V2::TransferRequestCollection.create!(
            transfer_requests_attributes: [request_hash(well, tube, additional_info)],
            user_uuid: user_uuid
          )
        end
      end
      true
    end

    def redirection_target
      parent
    end

    def anchor
      'relatives_tab'
    end

    private

    # Returns the WellFilter instance associated with the labware creator.
    # If the WellFilter instance does not already exist, it initializes a new
    # instance of `LabwareCreators::WellFilterKinnex` with the current creator.
    #
    # @return [LabwareCreators::WellFilterKinnex] The WellFilter instance
    def well_filter
      @well_filter ||= LabwareCreators::WellFilterKinnex.new(creator: self)
    end

    # Returns a hash representing a transfer request from a source well to a
    # destination tube. Additional parameters generated by the well filter are
    # merged into the request hash such as 'outer_request' and 'submission_id'.
    # This method assumes a direct stamp transfer i.e. A1 -> A1, B1 -> B1 etc.
    #
    # @param source_well [Sequencescape::Api::V2::Well] The source well.
    # @param destination_tube [Sequencescape::Api::V2::Tube] The destination plate.
    # @param additional_parameters [Hash] Additional parameters to include.
    # @return [Hash] A hash representing a transfer request.
    def request_hash(source_well, destination_tube, additional_parameters)
      { source_asset: source_well.uuid, target_asset: destination_tube.uuid }.merge(additional_parameters)
    end
  end
end
