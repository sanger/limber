# frozen_string_literal: true

require 'active_support/core_ext/integer/time'

# Localhost might need to be rewritten if running inside an environment/container.
# In which case, the value in the LOCALHOST environment variable will be substituted.
def rewrite_localhost(url)
  url.gsub(%r{((?<=http://)|(?<=https://))localhost}i, ENV.fetch('LOCALHOST', 'localhost'))
end

Rails.application.configure do
  # Settings specified here will take precedence over those in config/application.rb.

  # In the development environment your application's code is reloaded any time
  # it changes. This slows down response time but is perfect for development
  # since you don't have to restart the web server when you make code changes.
  config.enable_reloading = true

  # Eager load code on boot.
  config.eager_load = true

  # Show full error reports.
  config.consider_all_requests_local = true
  config.log_level = :error
  # Enable server timing.
  config.server_timing = true

  # Enable/disable caching. By default caching is disabled.
  # Run rails dev:cache to toggle caching.
  if Rails.root.join('tmp/caching-dev.txt').exist?
    config.action_controller.perform_caching = true
    config.action_controller.enable_fragment_cache_logging = true

    config.cache_store = :memory_store
    config.public_file_server.headers = { 'Cache-Control' => "public, max-age=#{2.days.to_i}" }
  else
    config.action_controller.perform_caching = false
    config.cache_store = :null_store
  end

  # Don't care if the mailer can't send.
  config.action_mailer.raise_delivery_errors = false

  # Disable caching for Action Mailer templates even if Action Controller
  # caching is enabled.
  config.action_mailer.perform_caching = false
  config.action_mailer.default_url_options = { host: 'localhost', port: 3001 }
  config.action_mailer.delivery_method = :test
  config.action_mailer.smtp_settings = {}

  # Print deprecation notices to the Rails logger.
  config.active_support.deprecation = :log

  # Raise exceptions for disallowed deprecations.
  config.active_support.disallowed_deprecation = :raise

  # Tell Active Support which deprecation messages to disallow.
  config.active_support.disallowed_deprecation_warnings = []

  # Highlight code that enqueued background job in logs.
  config.active_job.verbose_enqueue_logs = true

  # Raises error for missing translations.
  # config.i18n.raise_on_missing_translations = true

  # Annotate rendered view with file names.
  config.action_view.annotate_rendered_view_with_filenames = true

  # Admin email
  config.admin_email = 'nnnnnnnnnnnnnnnn'
  config.exception_recipients = 'nnnnnnnnnnnnnnnn'

  # API v1 config (deprecated)
  config.api = ActiveSupport::OrderedOptions.new
  config.api.v1 = ActiveSupport::OrderedOptions.new
  config.api.v1.connection_options = ActiveSupport::OrderedOptions.new
  config.api.v1.connection_options.namespace = 'Limber'
  config.api.v1.connection_options.url = rewrite_localhost(ENV.fetch('API_URL', 'http://localhost:3000/api/1/'))
  config.api.v1.connection_options.authorisation = ENV.fetch('API_KEY', 'development')

  # API v2 config
  config.api.v2 = ActiveSupport::OrderedOptions.new
  config.api.v2.connection_options = ActiveSupport::OrderedOptions.new
  config.api.v2.connection_options.url = rewrite_localhost(ENV.fetch('API2_URL', 'http://localhost:3000/api/v2'))
  config.api.v2.connection_options.js_url = ENV.fetch('API2_URL', 'http://localhost:3000/api/v2')
  config.api.v2.connection_options.authorisation = ENV.fetch('API_KEY', 'development')

  # Uncomment if you wish to allow Action Cable access from any origin.
  # config.action_cable.disable_request_forgery_protection = true

  # Raise error when a before_action's only/except options reference missing actions.
  config.action_controller.raise_on_missing_callback_actions = true

  # Apply autocorrection by RuboCop to files generated by `bin/rails generate`.
  # config.generators.apply_rubocop_autocorrect_after_generate!

  # URL for Sequencescape
  config.sequencescape_url = 'http://localhost:3000'

  # is this used? no reference in Limber
  config.qc_submission_name = 'MiSeq for QC'

  # By default used first study/project  - are these used? no reference in Limber
  config.study_uuid = nil
  config.project_uuid = nil

  # is this used?
  config.request_options = { 'read_length' => 11 }

  # Label printing services
  config.pmb_uri = ENV.fetch('PMB_URI', rewrite_localhost('http://localhost:3002/v1/'))
  config.sprint_uri = 'http://sprint.psd.sanger.ac.uk/graphql'

  # Traction
  config.traction_ui_uri = 'http://localhost:5173/#'
  config.traction_service_uri = 'http://localhost:3100/v1'

  # Enable 'work in progress' pipelines by default in development mode, to save having to rename files.
  # Configured for other environments in the deployment project.
  config.deploy_wip_pipelines = true
end
